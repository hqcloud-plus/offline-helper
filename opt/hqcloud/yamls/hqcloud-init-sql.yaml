apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hqcloud-secrets
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - update
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hqcloud-secrets
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hqcloud-secrets
subjects:
- kind: ServiceAccount
  name: default
  namespace: kube-system
---
apiVersion: batch/v1
kind: Job
metadata:
  name: hqcloud-init-sql
  namespace: kube-system
  labels:
    app: hqcloud-init-sql
spec:
  template:
    metadata:
      labels:
        app: hqcloud-init-sql
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      restartPolicy: OnFailure
      containers:
      - image: registry.hqcloud.com.cn:5000/hqcloud/mariadb:10.5.3
        command:
        - bash
        - /opt/hqcloud/sqls/init.sh
        imagePullPolicy: IfNotPresent
        name: hsqcloud-init-sql
        volumeMounts: 
        - name: "hqcloud-sqls"
          mountPath: "/opt/hqcloud/sqls"
        - name: "kube-cmds"
          mountPath: "/usr/bin/kubectl"
        - name: "kube-lib64"
          mountPath: "/usr/lib64"
      volumes: 
      - name: "hqcloud-sqls"
        hostPath:
          path: "/opt/hqcloud/sqls"
      - name: "kube-cmds"
        hostPath:
          path: "/usr/bin/kubectl"
      - name: "kube-lib64"
        hostPath:
          path: "/usr/lib64"
